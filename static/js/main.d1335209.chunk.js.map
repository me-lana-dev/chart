{"version":3,"sources":["components/Purchases/Purchases.module.css","context/Context.jsx","components/BarChart/BarChart.jsx","components/Indicators/IndicatorsSelect.jsx","components/Indicators/IndicatorsRow.jsx","components/Indicators/Indicators.jsx","components/Purchases/PurchasesRow.jsx","components/Purchases/PurchaseSelect.jsx","components/Purchases/Purchases.jsx","components/BarChartVidget/BarChartVidget.jsx","components/BarChartMonitoring/BarChartMonitoring.jsx","App.js","index.js","components/BarChartMonitoring/BarChartMonitoring.module.css","components/BarChart/BarChart.module.css","components/BarChartVidget/BarChartVidget.module.css","components/Indicators/Indicators.module.css"],"names":["module","exports","Context","React","createContext","BarChart","props","ref","useRef","console","log","Chart","chartdata","useContext","setIndicatorsData","statusVisible","setStatusVisible","labelsIndicators","setLabelIndicators","getParametrsArray","params","param","array","map","x","push","labels","dataLinesBlue","dataLinesPurple","chartAreaCols","id","beforeDraw","chart","args","options","ctx","chartArea","left","top","width","height","save","i","beginPath","y","widthRect","heightRect","rect","fillStyle","fill","restore","register","htmlLegendPlugin","afterUpdate","ul","listContainer","legendContainer","document","getElementById","querySelector","createElement","style","display","flexDirection","margin","padding","appendChild","getOrCreateLegendList","containerID","firstChild","remove","plugins","legend","generateLabels","forEach","item","li","alignItems","cursor","marginLeft","onclick","type","config","toggleDataVisibility","index","setDatasetVisibility","datasetIndex","isDatasetVisible","update","boxSpan","background","borderColor","strokeStyle","borderWidth","lineWidth","marginRight","borderRadius","textContainer","color","fontColor","textDecoration","hidden","text","createTextNode","radius","pointHoverRadius","responsive","htmlLegend","title","scales","min","max","ticks","size","grid","tickColor","align","className","styles","chart__top","chart__h2","data","datasets","label","backgroundColor","getElementsAtEvent","elements","length","current","_config","blueLine","purpleLine","labelsSelect","getParametrsSelect","labelActive","code","description","cases","indicators","IndicatorsSelect","filterLabel","filter","filterLabels","href","onClick","e","preventDefault","indicators__link","loadLabel","IndicatorsRow","indicatorsData","indicatorsCodes","indicator","codesSelect","setCodeIndicators","codes","codeActive","setPurchaseData","ocid","procurementMethodDetail","classification","estematedValue","status","purchases","openPurchase","Indicators","purchaseData","codesIndicators","indicators__h2","breadcrumbs","breadcrumbs__link","xmlns","viewBox","x1","y1","x2","y2","stroke","table","PurchasesRow","purchase","PurchaseSelect","filterCode","filterCodes","splitPurchases__link","loadData","Purchases","splitPurchases","splitPurchases__h2","BarChartVidget","ref2","chartVidget","month","value01","value02","pointBorderWidth","categoryPercentage","barPercentage","pointHoverBackgroundColor","stepSize","beginAtZero","drawTicks","stacked","BarChartMonitoring","dataBarBlue","dataBarPink","htmlLegendPlugin2","fontSize","fontWeight","wrap","htmlLegend2","App","nodeRefChart","nodeRefIndicators","nodeRefPurhcases","nodeRef2","nodeRef3","useState","CSSTransition","in","timeout","classNames","nodeRef","unmountOnExit","Provider","value","stage","average","ReactDOM","render","StrictMode"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,mBAAqB,sCAAsC,qBAAuB,wCAAwC,MAAQ,yBAAyB,YAAc,+BAA+B,kBAAoB,uC,kHCApRC,EAAUC,IAAMC,gB,+CC4UdC,EAxUE,SAACC,GAChB,IAAMC,EAAMC,mBACZC,QAAQC,IAAIC,KACZ,IAAQC,EAAcN,EAAdM,UAER,EAMIC,qBAAWX,GANf,mBACEY,EADF,KAEEC,EAFF,KAGEC,EAHF,KAIEC,EAJF,KAKEC,EALF,KASMC,EAAoB,SAACC,EAAQC,GACjC,IAAMC,EAAQ,GAId,OAHAF,EAAOG,KAAI,SAACC,GACV,OAAOF,EAAMG,KAAKD,EAAEH,OAEfC,GAcHI,EAASP,EAAkBP,EAAW,SACtCe,EAAgBR,EAAkBP,EAAW,SAC7CgB,EAAkBT,EAAkBP,EAAW,WAM/CiB,EAAgB,CACpBC,GAAI,gBACJC,WAFoB,SAETC,EAAOC,EAAMC,GACtB,IACEC,EAEEH,EAFFG,IADF,EAGIH,EADFI,UAAaC,EAFf,EAEeA,KAAMC,EAFrB,EAEqBA,IAAKC,EAF1B,EAE0BA,MAAOC,EAFjC,EAEiCA,OAEjCL,EAAIM,OAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BP,EAAIQ,YACJ,IAAInB,EAAIa,EAAQE,EAAQ,EAAKG,EACzBE,EAAIN,EACJO,EAAYN,EAAQ,EACpBO,EAAaN,EAEjBL,EAAIY,KAAKvB,EAAGoB,EAAGC,EAAWC,GAEtBJ,EAAI,IAINP,EAAIa,UAAY,UAChBb,EAAIa,UAAY,2BAChBb,EAAIc,QAMRd,EAAIe,YAIRvC,IAAMwC,SAAS,CAAEtB,kBAGjB,IA0BMuB,EAAmB,CACvBtB,GAAI,aACJuB,YAFuB,SAEXrB,EAAOC,EAAMC,GAIvB,IAHA,IAAMoB,EA7BoB,SAACtB,EAAOF,GAEpC,IAEIyB,EAFEC,EAAkBC,SAASC,eAAe5B,GAqBhD,OAjBI0B,IACFD,EAAgBC,EAAgBG,cAAc,OAG3CJ,KACHA,EAAgBE,SAASG,cAAc,OACzBC,MAAMC,QAAU,OAC9BP,EAAcM,MAAME,cAAgB,MACpCR,EAAcM,MAAMG,OAAS,EAC7BT,EAAcM,MAAMI,QAAU,EAE1BT,GACFA,EAAgBU,YAAYX,IAKzBA,EAMMY,CAAsBnC,EAAOE,EAAQkC,aAGzCd,EAAGe,YACRf,EAAGe,WAAWC,SAIFtC,EAAME,QAAQqC,QAAQC,OAAO9C,OAAO+C,eAAezC,GAE3D0C,SAAQ,SAACC,GACb,IAAMC,EAAKnB,SAASG,cAAc,MAClCgB,EAAGf,MAAMgB,WAAa,SACtBD,EAAGf,MAAMiB,OAAS,UAClBF,EAAGf,MAAMC,QAAU,OACnBc,EAAGf,MAAME,cAAgB,MACzBa,EAAGf,MAAMkB,WAAa,OAEtBH,EAAGI,QAAU,WACX,IAAQC,EAASjD,EAAMkD,OAAfD,KACK,QAATA,GAA2B,aAATA,EAEpBjD,EAAMmD,qBAAqBR,EAAKS,OAEhCpD,EAAMqD,qBACJV,EAAKW,cACJtD,EAAMuD,iBAAiBZ,EAAKW,eAGjCtD,EAAMwD,UAIR,IAAMC,EAAUhC,SAASG,cAAc,QACvC6B,EAAQ5B,MAAM6B,WAAaf,EAAK3B,UAChCyC,EAAQ5B,MAAM8B,YAAchB,EAAKiB,YACjCH,EAAQ5B,MAAMgC,YAAclB,EAAKmB,UAAY,KAC7CL,EAAQ5B,MAAMC,QAAU,eACxB2B,EAAQ5B,MAAMrB,OAAS,OACvBiD,EAAQ5B,MAAMkC,YAAc,OAC5BN,EAAQ5B,MAAMtB,MAAQ,OACtBkD,EAAQ5B,MAAMmC,aAAe,MAG7B,IAAMC,EAAgBxC,SAASG,cAAc,KAC7CqC,EAAcpC,MAAMqC,MAAQvB,EAAKwB,UACjCF,EAAcpC,MAAMG,OAAS,EAC7BiC,EAAcpC,MAAMI,QAAU,EAC9BgC,EAAcpC,MAAMuC,eAAiBzB,EAAK0B,OAAS,eAAiB,GAEpE,IAAMC,EAAO7C,SAAS8C,eAAe5B,EAAK2B,MAC1CL,EAAc/B,YAAYoC,GAE1B1B,EAAGV,YAAYuB,GACfb,EAAGV,YAAY+B,GACf3C,EAAGY,YAAYU,QAKrBjE,IAAMwC,SAAS,CAAEC,qBAEjB,IAAMlB,EAAU,CACdsE,OAAQ,EACRC,iBAAkB,EAClBC,YAAY,EACZnC,QAAS,CACP1C,cAAe,CACbC,GAAI,iBAEN6E,WAAY,CACVvC,YAAa,oBAEfI,OAAQ,CACNV,SAAS,GAEX8C,MAAO,CACL9C,SAAS,IAgBb+C,OAAQ,CACNjE,EAAG,CACDqC,KAAM,SACN6B,IAAK,EACLC,IAAK,EACLC,MAAO,CACLd,MAAO,UACPe,KAAM,GACNhD,QAAS,IAEXiD,KAAM,CACJhB,MAAO,UACPP,YAAa,YAGjBnE,EAAG,CACD0F,KAAM,CACJpD,SAAS,EACT6B,YAAa,WAEfqB,MAAO,CACLG,UAAW,MACXC,MAAO,SACPnD,QAAS,EACTiC,MAAO,cAuFf,OACE,sBAAKmB,UAAWC,IAAOtF,MAAvB,UACE,sBAAKqF,UAAWC,IAAOC,WAAvB,UACE,oBAAIF,UAAWC,IAAOE,UAAtB,gCACA,qBAAK1F,GAAG,wBAEV,cAAC,IAAD,CACEvB,IAAKA,EACLkH,KAzFO,WACX,MAAO,CACL/F,OAAQA,EACRQ,QAAS,CAAEA,WACXqC,QAAS,CAACnB,EAAkBvB,GAC5B6F,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,UACjBjC,YAAa,UACb8B,KAAM9F,EACNkE,YAAa,EACbZ,KAAM,QAER,CACE0C,MAAO,wBACPF,KAAM7F,EACNgG,gBAAiB,UACjBjC,YAAa,UACbE,YAAa,EACbZ,KAAM,WAsER/C,QAASA,EACT2F,mBAjEqB,SAACC,GAC1B,GAAKA,EAASC,OAAd,CAEA,IAAQ3C,EAAU0C,EAAS,GAAnB1C,MAGFuC,EAAQpH,EAAIyH,QAAQ9C,OAAO+C,QAAQR,KAAK/F,OAAO0D,GAC/C8C,EAAW3H,EAAIyH,QAAQ9C,OAAO+C,QAAQR,KAAKC,SAAS,GAAGD,KAAKrC,GAC5D+C,EAAa5H,EAAIyH,QAAQ9C,OAAO+C,QAAQR,KAAKC,SAAS,GAAGD,KAAKrC,GACpE3E,QAAQC,IAAIiH,EAAOO,EAAUC,GAK7B,IAAMC,EAzPmB,SAAChH,GAC1B,IAAMM,EAAS,GAOf,OANAN,EAAOG,KAAI,SAACC,EAAG4D,GACb,OAAO1D,EAAOD,KAAK,CACjBK,GAAIsD,EACJuC,MAAOnG,OAGJE,EAiPc2G,CAAmB3G,GAExCR,EAAmB,2BACdD,GADa,IAEhBS,OAAQ0G,EACRE,YAAalD,KAGftE,EAAkB,CAChB,CACEyH,KAAM,YACNC,YACE,kFACFC,MAAO,GAET,CACEF,KAAM,YACNC,YAAa,sDACbC,MAAO,GAET,CACEF,KAAM,YACNC,YACE,2EACFC,MAAO,KAIXzH,EAAiB,2BACZD,GADW,IAEdiB,OAAO,EACP0G,YAAY,a,gBCtPHC,EA1DU,SAACrI,GACxB,MAAgCA,EAAMW,iBAA9BqH,EAAR,EAAQA,YAAa5G,EAArB,EAAqBA,OAEfkH,EAAclH,EAAOmH,QAAO,SAAClB,GAAD,OAAWA,EAAK,KAAWW,KACvDQ,EAAepH,EAAOmH,QAAO,SAAClB,GAAD,OAAWA,EAAK,KAAWW,KA+B9D,OACE,sBAAKjB,UAAU,WAAf,UACE,oBAAG0B,KAAK,IAAIC,QA7BG,SAACC,GAClBA,EAAEC,kBA4BiC7B,UAAWC,IAAO6B,iBAAnD,UACGP,EAAY,GAAZ,MADH,YAGA,6BACGE,EAAavH,KAAI,SAACoG,EAAOvC,GACxB,OACE,oBAEE4D,QAAS,SAACC,IAjCJ,SAACA,EAAG7D,EAAOtD,GAE3BmH,EAAEC,iBACF5I,EAAMQ,kBAAkB,CACtB,CACEyH,KAAM,YACNC,YACE,kFACFC,MAAO,GAET,CACEF,KAAM,YACNC,YAAa,sDACbC,MAAO,KAIXnI,EAAMY,mBAAN,2BACKZ,EAAMW,kBADX,IAEEqH,YAAaxG,KAeHsH,CAAUH,EAAG7D,EAAOuC,EAAK,KAH7B,SAMGA,EAAK,OALDA,EAAK,aCmDT0B,EAhGO,SAAC/I,GACrB,IAAMgJ,EAAiBhJ,EAAMgJ,eAavBC,EARoB,SAACnI,EAAQC,GACjC,IAAMC,EAAQ,GAId,OAHAF,EAAOG,KAAI,SAACC,GACV,OAAOF,EAAMG,KAAKD,EAAEH,OAEfC,EAGeH,CAAkBmI,EAAgB,QAkE1D,OAAOA,EAAe/H,KAAI,SAACiI,EAAWpE,GAEpC,OACE,+BACE,6BAAKoE,EAAUjB,OACf,6BAAKiB,EAAUhB,cACf,6BACE,mBAAGO,KAAK,IAAIC,QAAS,SAACC,GAAD,OA3DR,SAACA,EAAG7D,GACvB6D,EAAEC,iBAGF,IAAMO,EAfmB,SAACrI,GAC1B,IAAMM,EAAS,GAOf,OANAN,EAAOG,KAAI,SAACC,EAAG4D,GACb,OAAO1D,EAAOD,KAAK,CACjBK,GAAIsD,EACJmD,KAAM/G,OAGHE,EAOa2G,CAAmBkB,GAGvCjJ,EAAMoJ,kBAAkB,CACtBC,MAAOF,EACPG,WAAYxE,IAYd9E,EAAMuJ,gBAAgB,CACpB,CACEC,KAAM,+BACNC,wBAAyB,sBACzBC,eAAgB,aAChBC,eAAgB,SAChBC,OAAQ,UAEV,CACEJ,KAAM,+BACNC,wBAAyB,oBACzBC,eAAgB,aAChBC,eAAgB,QAChBC,OAAQ,UAEV,CACEJ,KAAM,+BACNC,wBAAyB,wBACzBC,eAAgB,aAChBC,eAAgB,QAChBC,OAAQ,gBAIZ5J,EAAMU,iBAAN,2BACKV,EAAMU,kBADX,IAEE0H,YAAY,EACZyB,WAAW,KAWqBC,CAAanB,EAAG7D,IAA5C,SACGoE,EAAUf,YALRe,EAAUjB,UCYV8B,EA3FI,WACjB,MAWIxJ,qBAAWX,GAXf,oBACEoJ,EADF,KAEExI,EAFF,KAGEwJ,EAHF,KAIET,EAJF,KAKE9I,EALF,KAMEC,EANF,KAOEC,EAPF,KAQEC,EARF,KASEqJ,EATF,KAUEb,EAVF,KAyBA,OACE,sBAAKrC,UAAWC,IAAOoB,WAAvB,UACE,qBAAIrB,UAAWC,IAAOkD,eAAtB,UACE,oEACA,cAAC,EAAD,CACE1J,kBAAmBA,EACnBG,iBAAkBA,EAClBC,mBAAoBA,OAIxB,qBAAKmG,UAAWC,IAAOmD,YAAvB,SACE,sBAAKpD,UAAWC,IAAOoD,kBAAvB,UACE,mBAAG3B,KAAK,IAAIC,QAtBF,SAACC,GACjBA,EAAEC,iBAEFlI,EAAiB,2BACZD,GADW,IAEdiB,OAAO,EACP0G,YAAY,MAgBR,sBAGA,sBACEiC,MAAM,6BACNpI,MAAM,IACNC,OAAO,KACPoI,QAAQ,WACR3H,KAAK,OALP,UAOE,sBACE4H,GAAG,WACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,OAAO,YAET,sBACEJ,GAAG,WACHC,GAAG,WACHC,GAAG,UACHC,GAAG,UACHC,OAAO,oBAMf,wBAAO5D,UAAWC,IAAO4D,MAAzB,UACE,gCACE,+BACE,sCACA,sCACA,4CAGJ,gCACE,cAAC,EAAD,CACE5B,eAAgBA,EAChBiB,gBAAiBA,EACjBb,kBAAmBA,EACnBY,aAAcA,EACdT,gBAAiBA,EACjB9I,cAAeA,EACfC,iBAAkBA,aCrEfmK,EAlBM,SAAC7K,GAGpB,OAFqBA,EAAMgK,aAEP/I,KAAI,SAAC6J,EAAUhG,GACjC,OACE,+BACE,6BACE,mBAAG2D,KAAK,IAAR,SAAaqC,EAAStB,SAExB,6BAAKsB,EAASrB,0BACd,6BAAKqB,EAASpB,iBACd,6BAAKoB,EAASnB,iBACd,6BAAKmB,EAASlB,WAPP9E,O,iBC6EAiG,EAjFQ,SAAC/K,GACtB,MAA8BA,EAAMiK,gBAA5BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,MAEd2B,EAAa3B,EAAMd,QAAO,SAACN,GAAD,OAAUA,EAAI,KAAWqB,KACnD2B,EAAc5B,EAAMd,QAAO,SAACN,GAAD,OAAUA,EAAI,KAAWqB,KAkD1D,OACE,sBAAKvC,UAAU,WAAf,UACE,mBACE0B,KAAK,IACLC,QAlDiB,SAACC,GACtBA,EAAEC,kBAkDE7B,UAAWC,IAAOkE,qBAHpB,SAKGF,EAAW,GAAX,OAEH,6BACGC,EAAYhK,KAAI,SAACgH,EAAMnD,GACtB,OACE,oBAEE4D,QAAS,SAACC,IAxDL,SAACA,EAAG7D,EAAOtD,GAW1BmH,EAAEC,iBACF5I,EAAMuJ,gBAAgB,CACpB,CACEC,KAAM,+BACNC,wBAAyB,sBACzBC,eAAgB,aAChBC,eAAgB,SAChBC,OAAQ,UAEV,CACEJ,KAAM,+BACNC,wBAAyB,oBACzBC,eAAgB,aAChBC,eAAgB,QAChBC,OAAQ,UAEV,CACEJ,KAAM,+BACNC,wBAAyB,wBACzBC,eAAgB,aAChBC,eAAgB,QAChBC,OAAQ,gBAIZ5J,EAAMoJ,kBAAN,2BACKpJ,EAAMiK,iBADX,IAEEX,WAAY9H,KAmBF2J,CAASxC,EAAG7D,EAAOmD,EAAI,KAH3B,SAMGA,EAAI,MALAA,EAAI,aCkBRmD,EAlFG,WAChB,MAOI7K,qBAAWX,GAPf,mBACEoK,EADF,KAEET,EAFF,KAGE9I,EAHF,KAIEC,EAJF,KAKEuJ,EALF,KAMEb,EANF,KAsBA,OACE,sBAAKrC,UAAWC,IAAOqE,eAAvB,UACE,qBAAItE,UAAWC,IAAOsE,mBAAtB,UACE,uFACA,cAAC,EAAD,CACEtB,aAAcA,EACdT,gBAAiBA,EACjBU,gBAAiBA,EACjBb,kBAAmBA,OAGvB,qBAAKrC,UAAWC,IAAOmD,YAAvB,SACE,sBAAKpD,UAAWC,IAAOoD,kBAAvB,UACE,mBAAG3B,KAAK,cAAcC,QAvBP,SAACC,GACtBA,EAAEC,iBAEFlI,EAAiB,2BACZD,GADW,IAEd2H,YAAY,EACZyB,WAAW,MAiBP,wBAGA,sBACEQ,MAAM,6BACNpI,MAAM,IACNC,OAAO,KACPoI,QAAQ,WACR3H,KAAK,OALP,UAOE,sBACE4H,GAAG,WACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,OAAO,YAET,sBACEJ,GAAG,WACHC,GAAG,WACHC,GAAG,UACHC,GAAG,UACHC,OAAO,oBAMf,wBAAO5D,UAAWC,IAAO4D,MAAzB,UACE,gCACE,+BACE,sCACA,wCACA,2CACA,gDACA,qDAGJ,gCACE,cAAC,EAAD,CAAcZ,aAAcA,a,iBCiBvBuB,EA9FQ,WACrB,IAAMC,EAAOtL,mBACPuL,EAAc,CAClB,CAAEC,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,OAIpC/K,EAAoB,SAACC,EAAQC,GACjC,IAAMC,EAAQ,GAId,OAHAF,EAAOG,KAAI,SAACC,GACV,OAAOF,EAAMG,KAAKD,EAAEH,OAEfC,GA8CHmG,EAAO,CACX/F,OA7CaP,EAAkB4K,EAAa,SA8C5CrE,SAAU,CACR,CACEC,MAAO,WACPF,KAhDctG,EAAkB4K,EAAa,WAiD7CnE,gBAAiB,UACjBjC,YAAa,UACbwG,iBAAkB,EAClBC,mBAAoB,MACpBC,cAAe,MACfC,0BAA2B,WAE7B,CACE3E,MAAO,WACPF,KAzDgBtG,EAAkB4K,EAAa,WA0D/CnE,gBAAiB,UACjBjC,YAAa,UACbyG,mBAAoB,MACpBC,cAAe,MACfC,0BAA2B,aAKjC,OACE,qBAAKjF,UAAWC,IAAOtF,MAAvB,SACE,cAAC,IAAD,CAAKzB,IAAKuL,EAAMrE,KAAMA,EAAMvF,QAnEhB,CACdqC,QAAS,CACP1C,eAAe,EACf2C,OAAQ,CACNV,SAAS,GAEX8C,MAAO,CACL9C,SAAS,IAGb+C,OAAQ,CACNjE,EAAG,CACDmE,IAAK,IACLD,IAAK,EACLE,MAAO,CACLuF,SAAU,GACVC,aAAa,EACbC,WAAW,EACX3I,SAAS,EACTG,QAAS,GAEXiD,KAAM,CACJvB,YAAa,cACbwB,WAAW,EACXjB,MAAO,YAGX1E,EAAG,CACDkL,SAAS,EACTxF,KAAM,CACJpD,SAAS,EACT6B,YAAa,mB,iBC8JRgH,EAnNY,WACzB,IAAMb,EAAOtL,mBACPuL,EAAc,CAClB,CAAEC,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,MACxC,CAAEF,MAAO,MAAOC,QAAS,KAAMC,QAAS,OAIpC/K,EAAoB,SAACC,EAAQC,GACjC,IAAMC,EAAQ,GAId,OAHAF,EAAOG,KAAI,SAACC,GACV,OAAOF,EAAMG,KAAKD,EAAEH,OAEfC,GAEHI,EAASP,EAAkB4K,EAAa,SACxCa,EAAczL,EAAkB4K,EAAa,WAC7Cc,EAAc1L,EAAkB4K,EAAa,WA6B7Ce,EAAoB,CACxBhL,GAAI,cACJuB,YAFwB,SAEZrB,EAAOC,EAAMC,GAIvB,IAHA,IAAMoB,EA7BoB,SAACtB,EAAOF,GAEpC,IAEIyB,EAFEC,EAAkBC,SAASC,eAAe5B,GAqBhD,OAjBI0B,IACFD,EAAgBC,EAAgBG,cAAc,OAG3CJ,KACHA,EAAgBE,SAASG,cAAc,OACzBC,MAAMC,QAAU,OAC9BP,EAAcM,MAAME,cAAgB,MACpCR,EAAcM,MAAMG,OAAS,EAC7BT,EAAcM,MAAMI,QAAU,EAE1BT,GACFA,EAAgBU,YAAYX,IAKzBA,EAMMY,CAAsBnC,EAAOE,EAAQkC,aAGzCd,EAAGe,YACRf,EAAGe,WAAWC,SAIFtC,EAAME,QAAQqC,QAAQC,OAAO9C,OAAO+C,eAAezC,GAE3D0C,SAAQ,SAACC,GACb,IAAMC,EAAKnB,SAASG,cAAc,MAClCgB,EAAGf,MAAMgB,WAAa,SACtBD,EAAGf,MAAMiB,OAAS,UAClBF,EAAGf,MAAMC,QAAU,OACnBc,EAAGf,MAAME,cAAgB,MACzBa,EAAGf,MAAMkB,WAAa,OAEtBH,EAAGI,QAAU,WACX,IAAQC,EAASjD,EAAMkD,OAAfD,KACK,QAATA,GAA2B,aAATA,EAEpBjD,EAAMmD,qBAAqBR,EAAKS,OAEhCpD,EAAMqD,qBACJV,EAAKW,cACJtD,EAAMuD,iBAAiBZ,EAAKW,eAGjCtD,EAAMwD,UAIR,IAAMC,EAAUhC,SAASG,cAAc,QACvC6B,EAAQ5B,MAAM6B,WAAaf,EAAK3B,UAChCyC,EAAQ5B,MAAM8B,YAAchB,EAAKiB,YACjCH,EAAQ5B,MAAMgC,YAAclB,EAAKmB,UAAY,KAC7CL,EAAQ5B,MAAMC,QAAU,eACxB2B,EAAQ5B,MAAMrB,OAAS,OACvBiD,EAAQ5B,MAAMkC,YAAc,OAC5BN,EAAQ5B,MAAMtB,MAAQ,OACtBkD,EAAQ5B,MAAMmC,aAAe,MAG7B,IAAMC,EAAgBxC,SAASG,cAAc,KAC7CqC,EAAcpC,MAAMqC,MAAQ,QAC5BD,EAAcpC,MAAMG,OAAS,EAC7BiC,EAAcpC,MAAMI,QAAU,EAC9BgC,EAAcpC,MAAMkJ,SAAW,OAC/B9G,EAAcpC,MAAMmJ,WAAa,MACjC/G,EAAcpC,MAAMuC,eAAiBzB,EAAK0B,OAAS,eAAiB,GAEpE,IAAMC,EAAO7C,SAAS8C,eAAe5B,EAAK2B,MAC1CL,EAAc/B,YAAYoC,GAE1B1B,EAAGV,YAAYuB,GACfb,EAAGV,YAAY+B,GACf3C,EAAGY,YAAYU,QAKrBjE,IAAMwC,SAAS,CAAE2J,sBAEjB,IAgDMrF,EAAO,CACX/F,OAAQA,EACRgG,SAAU,CACR,CACEC,MAAO,mBACPF,KAAMmF,EACNhF,gBAAiB,UACjBjC,YAAa,UACbwG,iBAAkB,EAClBC,mBAAoB,MACpBC,cAAe,MACfC,0BAA2B,yBAE7B,CACE3E,MAAO,mBACPF,KAAMoF,EACNjF,gBAAiB,UACjBjC,YAAa,UACbyG,mBAAoB,MACpBC,cAAe,MACfC,0BAA2B,aAKjC,OACE,qBAAKjF,UAAWC,IAAO2F,KAAvB,SACE,sBAAK5F,UAAWC,IAAOtF,MAAvB,UACE,sBAAKqF,UAAWC,IAAOC,WAAvB,UACE,oBAAIF,UAAWC,IAAOE,UAAtB,iDAGA,qBAAK1F,GAAG,yBAEV,cAAC,IAAD,CAAKvB,IAAKuL,EAAMrE,KAAMA,EAAMvF,QAlFlB,CACdqC,QAAS,CACP1C,eAAe,EACf8E,YAAY,EACZuG,YAAa,CACX9I,YAAa,qBAEfI,OAAQ,CACNV,SAAS,GAEX8C,MAAO,CACL9C,SAAS,IAGb+C,OAAQ,CACNjE,EAAG,CACDmE,IAAK,IACLD,IAAK,EACLE,MAAO,CACLuF,SAAU,GACVC,aAAa,EACbC,WAAW,EACX3I,SAAS,EACTG,QAAS,GAEXiD,KAAM,CACJvB,YAAa,cACbwB,WAAW,EACXjB,MAAO,8BAGX1E,EAAG,CACDkL,SAAS,EACT1F,MAAO,CACLd,MAAO,WAETgB,KAAM,CACJpD,SAAS,EACT6B,YAAa,4BACbO,MAAO,kBCEFiH,G,OA9JH,WACV,IAAMC,EAAejN,IAAMK,SACrB6M,EAAoBlN,IAAMK,SAC1B8M,EAAmBnN,IAAMK,SAEzB+M,EAAWpN,IAAMK,SACjBgN,EAAWrN,IAAMK,SAEvB,EAA0CiN,mBAAS,CACjDzL,OAAO,EACP0G,YAAY,EACZyB,WAAW,IAHb,mBAAOpJ,EAAP,KAAsBC,EAAtB,KAgBA,EAA4CyM,mBAAS,MAArD,mBAAOnE,EAAP,KAAuBxI,EAAvB,KAEA,EAAwC2M,mBAAS,MAAjD,mBAAOnD,EAAP,KAAqBT,EAArB,KAEA,EAA+C4D,mBAAS,CACtD/L,OAAQ,CAAC,CAAEI,GAAI,GAAI6F,MAAO,KAC1BW,YAAa,KAFf,mBAAOrH,EAAP,KAAyBC,EAAzB,KAIA,EAA6CuM,mBAAS,CACpD9D,MAAO,CAAC,CAAE7H,GAAI,GAAIyG,KAAM,KACxBqB,WAAY,KAFd,mBAAOW,EAAP,KAAwBb,EAAxB,KAOA,OACE,sBAAKrC,UAAU,MAAf,UACE,cAACqG,EAAA,EAAD,CACEC,GAAI5M,EAAciB,MAClB4L,QAAS,IACTC,WAAW,aACXC,QAASV,EACTW,eAAa,EALf,SAOE,cAAC7N,EAAQ8N,SAAT,CACEC,MAAO,CACLnN,EACAC,EACAC,EACAC,EACAC,GANJ,SASE,qBAAKX,IAAK6M,EAAV,SACGrM,EAAciB,OAAS,cAAC,EAAD,CAAUpB,UA5C1B,CAChB,CAAEsN,MAAO,eAAgBD,MAAO,EAAGE,QAAS,GAC5C,CAAED,MAAO,gBAAiBD,MAAO,EAAGE,QAAS,GAC7C,CAAED,MAAO,gBAAiBD,MAAO,EAAGE,QAAS,GAC7C,CAAED,MAAO,YAAaD,MAAO,EAAGE,QAAS,GACzC,CAAED,MAAO,aAAcD,MAAO,EAAGE,QAAS,GAC1C,CAAED,MAAO,WAAYD,MAAO,EAAGE,QAAS,GACxC,CAAED,MAAO,cAAeD,MAAO,EAAGE,QAAS,YA0CzC,cAACT,EAAA,EAAD,CACEC,GAAI5M,EAAc2H,WAClBkF,QAAS,IACTC,WAAW,aACXC,QAAST,EACTU,eAAa,EALf,SAOE,cAAC7N,EAAQ8N,SAAT,CACEC,MAAO,CACL3E,EACAxI,EACAwJ,EACAT,EACA9I,EACAC,EACAC,EACAC,EACAqJ,EACAb,GAXJ,SAcE,qBAAKnJ,IAAK8M,EAAV,SACGtM,EAAc2H,YAAc,cAAC,EAAD,UAKnC,cAACgF,EAAA,EAAD,CACEC,GAAI5M,EAAcoJ,UAClByD,QAAS,IACTC,WAAW,aACXC,QAASR,EACTS,eAAa,EALf,SAOE,cAAC7N,EAAQ8N,SAAT,CACEC,MAAO,CACL3D,EACAT,EACA9I,EACAC,EACAuJ,EACAb,GAPJ,SAUE,qBAAKnJ,IAAK+M,EAAV,SACGvM,EAAcoJ,WAAa,cAAC,EAAD,UAKlC,cAACuD,EAAA,EAAD,CACEC,GAAI5M,EAAciB,MAClB4L,QAAS,IACTC,WAAW,aACXC,QAASP,EACTQ,eAAa,EALf,SAOE,cAAC7N,EAAQ8N,SAAT,CACEC,MAAO,CACLnN,EACAC,EACAC,EACAC,EACAC,GANJ,SASE,qBAAKX,IAAKgN,EAAV,SAAqBxM,EAAciB,OAAS,cAAC,EAAD,UAIhD,cAAC0L,EAAA,EAAD,CACEC,GAAI5M,EAAciB,MAClB4L,QAAS,IACTC,WAAW,aACXC,QAASN,EACTO,eAAa,EALf,SAOE,cAAC7N,EAAQ8N,SAAT,CACEC,MAAO,CACLnN,EACAC,EACAC,EACAC,EACAC,GANJ,SASE,qBAAKX,IAAKiN,EAAV,SACGzM,EAAciB,OAAS,cAAC,EAAD,eC3JpCoM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7K,SAASC,eAAe,U,mBCR1B1D,EAAOC,QAAU,CAAC,KAAO,iCAAiC,MAAQ,kCAAkC,UAAY,sCAAsC,WAAa,uCAAuC,oBAAoB,gD,mBCA9ND,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,UAAY,4BAA4B,WAAa,+B,mBCAvGD,EAAOC,QAAU,CAAC,MAAQ,gC,uCCA1BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,eAAiB,mCAAmC,iBAAmB,qCAAqC,MAAQ,0BAA0B,YAAc,gCAAgC,kBAAoB,yC","file":"static/js/main.d1335209.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splitPurchases\":\"Purchases_splitPurchases___O548\",\"splitPurchases__h2\":\"Purchases_splitPurchases__h2__IlfRL\",\"splitPurchases__link\":\"Purchases_splitPurchases__link__3-qOS\",\"table\":\"Purchases_table__1PmEy\",\"breadcrumbs\":\"Purchases_breadcrumbs__2HDjQ\",\"breadcrumbs__link\":\"Purchases_breadcrumbs__link__KL0J7\"};","import React from \"react\";\nexport const Context = React.createContext();\n","import React, { useContext, useRef } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport styles from \"./BarChart.module.css\";\nimport { Bar, Chart } from \"react-chartjs-2\";\n\nconst BarChart = (props) => {\n  const ref = useRef();\n  console.log(Chart);\n  const { chartdata } = props;\n  //console.log(chartdata);\n  const [\n    setIndicatorsData,\n    statusVisible,\n    setStatusVisible,\n    labelsIndicators,\n    setLabelIndicators,\n  ] = useContext(Context);\n\n  // Get Parameters from chartData\n  const getParametrsArray = (params, param) => {\n    const array = [];\n    params.map((x) => {\n      return array.push(x[param]);\n    });\n    return array;\n  };\n\n  const getParametrsSelect = (params) => {\n    const labels = [];\n    params.map((x, index) => {\n      return labels.push({\n        id: index,\n        label: x,\n      });\n    });\n    return labels;\n  };\n\n  const labels = getParametrsArray(chartdata, \"stage\");\n  const dataLinesBlue = getParametrsArray(chartdata, \"value\");\n  const dataLinesPurple = getParametrsArray(chartdata, \"average\");\n  //console.log(labels, dataLinesBlue, dataLinesPurple);\n  //console.log(labelsIndicators);\n\n  // Plugins for Chart\n  /* columns background */\n  const chartAreaCols = {\n    id: \"chartAreaCols\",\n    beforeDraw(chart, args, options) {\n      const {\n        ctx,\n        chartArea: { left, top, width, height },\n      } = chart;\n      ctx.save();\n\n      for (var i = 0; i < 7; i++) {\n        // for (var j = 0; j < 3; j++) {\n        ctx.beginPath();\n        var x = left + (width / 7) * i; // x coordinate\n        var y = top; // y coordinate\n        var widthRect = width / 7;\n        var heightRect = height;\n\n        ctx.rect(x, y, widthRect, heightRect);\n\n        if (i % 2) {\n          // ctx.fillStyle = \"#E7EBEF\";\n          // ctx.fill();\n        } else {\n          ctx.fillStyle = \"#E7EBEF\";\n          ctx.fillStyle = \"rgba(231, 235, 239, 0.5)\";\n          ctx.fill();\n          // ctx.stroke();\n        }\n        // }\n      }\n\n      ctx.restore();\n    },\n  };\n\n  Chart.register({ chartAreaCols });\n\n  /* html legend */\n  const getOrCreateLegendList = (chart, id) => {\n    //console.log(chart);\n    const legendContainer = document.getElementById(id);\n\n    let listContainer;\n\n    if (legendContainer) {\n      listContainer = legendContainer.querySelector(\"ul\");\n    }\n\n    if (!listContainer) {\n      listContainer = document.createElement(\"ul\");\n      listContainer.style.display = \"flex\";\n      listContainer.style.flexDirection = \"row\";\n      listContainer.style.margin = 0;\n      listContainer.style.padding = 0;\n\n      if (legendContainer) {\n        legendContainer.appendChild(listContainer);\n      }\n      //legendContainer.appendChild(listContainer);\n    }\n\n    return listContainer;\n  };\n\n  const htmlLegendPlugin = {\n    id: \"htmlLegend\",\n    afterUpdate(chart, args, options) {\n      const ul = getOrCreateLegendList(chart, options.containerID);\n\n      // Remove old legend items\n      while (ul.firstChild) {\n        ul.firstChild.remove();\n      }\n\n      // Reuse the built-in legendItems generator\n      const items = chart.options.plugins.legend.labels.generateLabels(chart);\n\n      items.forEach((item) => {\n        const li = document.createElement(\"li\");\n        li.style.alignItems = \"center\";\n        li.style.cursor = \"pointer\";\n        li.style.display = \"flex\";\n        li.style.flexDirection = \"row\";\n        li.style.marginLeft = \"30px\";\n\n        li.onclick = () => {\n          const { type } = chart.config;\n          if (type === \"pie\" || type === \"doughnut\") {\n            // Pie and doughnut charts only have a single dataset and visibility is per item\n            chart.toggleDataVisibility(item.index);\n          } else {\n            chart.setDatasetVisibility(\n              item.datasetIndex,\n              !chart.isDatasetVisible(item.datasetIndex)\n            );\n          }\n          chart.update();\n        };\n\n        // Color box\n        const boxSpan = document.createElement(\"span\");\n        boxSpan.style.background = item.fillStyle;\n        boxSpan.style.borderColor = item.strokeStyle;\n        boxSpan.style.borderWidth = item.lineWidth + \"px\";\n        boxSpan.style.display = \"inline-block\";\n        boxSpan.style.height = \"20px\";\n        boxSpan.style.marginRight = \"10px\";\n        boxSpan.style.width = \"20px\";\n        boxSpan.style.borderRadius = \"50%\";\n\n        // Text\n        const textContainer = document.createElement(\"p\");\n        textContainer.style.color = item.fontColor;\n        textContainer.style.margin = 0;\n        textContainer.style.padding = 0;\n        textContainer.style.textDecoration = item.hidden ? \"line-through\" : \"\";\n\n        const text = document.createTextNode(item.text);\n        textContainer.appendChild(text);\n\n        li.appendChild(boxSpan);\n        li.appendChild(textContainer);\n        ul.appendChild(li);\n      });\n    },\n  };\n\n  Chart.register({ htmlLegendPlugin });\n\n  const options = {\n    radius: 6,\n    pointHoverRadius: 6,\n    responsive: true,\n    plugins: {\n      chartAreaCols: {\n        id: \"chartAreaCols\",\n      },\n      htmlLegend: {\n        containerID: \"legend-container\",\n      },\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n    // animations: {\n    //   y: {\n    //     easing: \"easeInOutElastic\",\n    //     from: (ctx) => {\n    //       if (ctx.type === \"data\") {\n    //         if (ctx.mode === \"default\" && !ctx.dropped) {\n    //           ctx.dropped = true;\n    //           return 0;\n    //         }\n    //       }\n    //     },\n    //   },\n    // },\n    scales: {\n      y: {\n        type: \"linear\",\n        min: 0,\n        max: 8,\n        ticks: {\n          color: \"#959A9E\",\n          size: 14,\n          padding: 10,\n        },\n        grid: {\n          color: \"#E7EBEF\",\n          borderColor: \"#FFFFFF\",\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n          borderColor: \"#E7EBEF\",\n        },\n        ticks: {\n          tickColor: \"red\",\n          align: \"center\",\n          padding: 0,\n          color: \"#959A9E\",\n        },\n      },\n    },\n  };\n\n  const data = () => {\n    return {\n      labels: labels,\n      options: { options },\n      plugins: [htmlLegendPlugin, chartAreaCols],\n      datasets: [\n        {\n          label: \"my first dataset\",\n          backgroundColor: \"#36B5EB\",\n          borderColor: \"#36B5EB\",\n          data: dataLinesBlue,\n          borderWidth: 1,\n          type: \"line\",\n        },\n        {\n          label: \"average in the system\",\n          data: dataLinesPurple,\n          backgroundColor: \"#9a3c86\",\n          borderColor: \"#9a3c86\",\n          borderWidth: 1,\n          type: \"line\",\n        },\n      ],\n    };\n  };\n\n  const getElementsAtEvent = (elements) => {\n    if (!elements.length) return;\n\n    const { index } = elements[0];\n    //console.log(index);\n\n    const label = ref.current.config._config.data.labels[index];\n    const blueLine = ref.current.config._config.data.datasets[0].data[index];\n    const purpleLine = ref.current.config._config.data.datasets[1].data[index];\n    console.log(label, blueLine, purpleLine);\n\n    // console.log(labelsIndicators);\n    // console.log(1);\n\n    const labelsSelect = getParametrsSelect(labels);\n\n    setLabelIndicators({\n      ...labelsIndicators,\n      labels: labelsSelect,\n      labelActive: index,\n    });\n\n    setIndicatorsData([\n      {\n        code: \"RI-PS-001\",\n        description:\n          \"Short or inadequate notice to bidders to submit expressions of interest or bids\",\n        cases: 2,\n      },\n      {\n        code: \"RI-PS-003\",\n        description: \"Splitting purchases to avoid procurement thresholds\",\n        cases: 1,\n      },\n      {\n        code: \"RI-PS-005\",\n        description:\n          \"Direct awards in contravention to the provisions of the procurement plan\",\n        cases: 7,\n      },\n    ]);\n\n    setStatusVisible({\n      ...statusVisible,\n      chart: false,\n      indicators: true,\n    });\n  };\n\n  // new Chart(ref, {\n  //   data: data,\n  //   options: options,\n  //   getElementsAtEvent: getElementsAtEvent,\n  // });\n\n  return (\n    <div className={styles.chart}>\n      <div className={styles.chart__top}>\n        <h2 className={styles.chart__h2}>Red Flags Dynamics</h2>\n        <div id=\"legend-container\"></div>\n      </div>\n      <Bar\n        ref={ref}\n        data={data}\n        options={options}\n        getElementsAtEvent={getElementsAtEvent}\n      />\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport styles from \"./Indicators.module.css\";\n\nconst IndicatorsSelect = (props) => {\n  const { labelActive, labels } = props.labelsIndicators;\n\n  const filterLabel = labels.filter((label) => label[\"id\"] === labelActive);\n  const filterLabels = labels.filter((label) => label[\"id\"] !== labelActive);\n  //console.log(\"filterLabel\", filterLabel);\n  //console.log(\"filterLabels\", filterLabels);\n\n  const openSelect = (e) => {\n    e.preventDefault();\n  };\n\n  const loadLabel = (e, index, id) => {\n    //console.log(index);\n    e.preventDefault();\n    props.setIndicatorsData([\n      {\n        code: \"RI-PS-004\",\n        description:\n          \"Short or inadequate notice to bidders to submit expressions of interest or bids\",\n        cases: 2,\n      },\n      {\n        code: \"RI-PS-001\",\n        description: \"Splitting purchases to avoid procurement thresholds\",\n        cases: 1,\n      },\n    ]);\n\n    props.setLabelIndicators({\n      ...props.labelsIndicators,\n      labelActive: id,\n    });\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <a href=\"/\" onClick={openSelect} className={styles.indicators__link}>\n        {filterLabel[0][\"label\"]} stage\n      </a>\n      <ul>\n        {filterLabels.map((label, index) => {\n          return (\n            <li\n              key={label[\"id\"]}\n              onClick={(e) => {\n                loadLabel(e, index, label[\"id\"]);\n              }}\n            >\n              {label[\"label\"]}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default IndicatorsSelect;\n","import React from \"react\";\n\nconst IndicatorsRow = (props) => {\n  const indicatorsData = props.indicatorsData;\n\n  //console.log(props.codesIndicators);\n\n  // Get Parameters from chartData\n  const getParametrsArray = (params, param) => {\n    const array = [];\n    params.map((x) => {\n      return array.push(x[param]);\n    });\n    return array;\n  };\n\n  const indicatorsCodes = getParametrsArray(indicatorsData, \"code\");\n  //console.log(indicatorsCodes);\n\n  const getParametrsSelect = (params) => {\n    const labels = [];\n    params.map((x, index) => {\n      return labels.push({\n        id: index,\n        code: x,\n      });\n    });\n    return labels;\n  };\n\n  const openPurchase = (e, index) => {\n    e.preventDefault();\n    //console.log(indicatorsCodes, index);\n\n    const codesSelect = getParametrsSelect(indicatorsCodes);\n    //console.log(\"codesSelect\", codesSelect);\n\n    props.setCodeIndicators({\n      codes: codesSelect,\n      codeActive: index,\n    });\n    //console.log(props.codesIndicators);\n\n    //console.log(props.codesIndicators);\n    // props.setCodeIndicators({\n    //   ...props.codesIndicators,\n    //   codes: props.indicatorsCodes,\n    //   codeActive: index,\n    // });\n    //console.log(props.codesIndicators);\n\n    props.setPurchaseData([\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868539\",\n        procurementMethodDetail: \"Framework execution\",\n        classification: \"15000000-8\",\n        estematedValue: 71555247,\n        status: \"active\",\n      },\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868540\",\n        procurementMethodDetail: \"Restricted tender\",\n        classification: \"15000000-9\",\n        estematedValue: 1555247,\n        status: \"active\",\n      },\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868539\",\n        procurementMethodDetail: \"Request for quotation\",\n        classification: \"15000000-8\",\n        estematedValue: 1555247,\n        status: \"evaluation\",\n      },\n    ]);\n\n    props.setStatusVisible({\n      ...props.setStatusVisible,\n      indicators: false,\n      purchases: true,\n    });\n  };\n\n  return indicatorsData.map((indicator, index) => {\n    // console.log(index);\n    return (\n      <tr key={indicator.code}>\n        <td>{indicator.code}</td>\n        <td>{indicator.description}</td>\n        <td>\n          <a href=\"/\" onClick={(e) => openPurchase(e, index)}>\n            {indicator.cases}\n          </a>\n        </td>\n      </tr>\n    );\n  });\n};\n\nexport default IndicatorsRow;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport styles from \"./Indicators.module.css\";\nimport IndicatorsSelect from \"./IndicatorsSelect\";\nimport IndicatorsRow from \"./IndicatorsRow\";\n\nconst Indicators = () => {\n  const [\n    indicatorsData,\n    setIndicatorsData,\n    purchaseData,\n    setPurchaseData,\n    statusVisible,\n    setStatusVisible,\n    labelsIndicators,\n    setLabelIndicators,\n    codesIndicators,\n    setCodeIndicators,\n  ] = useContext(Context);\n\n  //console.log(labelsIndicators);\n  //console.log(codesIndicators, setCodeIndicators);\n\n  const openChart = (e) => {\n    e.preventDefault();\n\n    setStatusVisible({\n      ...statusVisible,\n      chart: true,\n      indicators: false,\n    });\n  };\n  return (\n    <div className={styles.indicators}>\n      <h2 className={styles.indicators__h2}>\n        <span>Risk indicators appearing during</span>\n        <IndicatorsSelect\n          setIndicatorsData={setIndicatorsData}\n          labelsIndicators={labelsIndicators}\n          setLabelIndicators={setLabelIndicators}\n        />\n      </h2>\n\n      <div className={styles.breadcrumbs}>\n        <div className={styles.breadcrumbs__link}>\n          <a href=\"/\" onClick={openChart}>\n            Dynamics\n          </a>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"7\"\n            height=\"12\"\n            viewBox=\"0 0 7 12\"\n            fill=\"none\"\n          >\n            <line\n              x1=\"0.646447\"\n              y1=\"11.6464\"\n              x2=\"5.64645\"\n              y2=\"6.64645\"\n              stroke=\"#9B3C86\"\n            />\n            <line\n              x1=\"0.353553\"\n              y1=\"0.646447\"\n              x2=\"6.35355\"\n              y2=\"6.64645\"\n              stroke=\"#9B3C86\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <td>Code</td>\n            <td>Name</td>\n            <td>Cases</td>\n          </tr>\n        </thead>\n        <tbody>\n          <IndicatorsRow\n            indicatorsData={indicatorsData}\n            codesIndicators={codesIndicators}\n            setCodeIndicators={setCodeIndicators}\n            purchaseData={purchaseData}\n            setPurchaseData={setPurchaseData}\n            statusVisible={statusVisible}\n            setStatusVisible={setStatusVisible}\n          />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Indicators;\n","import React from \"react\";\n\nconst PurchasesRow = (props) => {\n  const purchaseData = props.purchaseData;\n\n  return purchaseData.map((purchase, index) => {\n    return (\n      <tr key={index}>\n        <td>\n          <a href=\"/\">{purchase.ocid}</a>\n        </td>\n        <td>{purchase.procurementMethodDetail}</td>\n        <td>{purchase.classification}</td>\n        <td>{purchase.estematedValue}</td>\n        <td>{purchase.status}</td>\n      </tr>\n    );\n  });\n};\n\nexport default PurchasesRow;\n","import React from \"react\";\nimport styles from \"./Purchases.module.css\";\n\nconst PurchaseSelect = (props) => {\n  const { codeActive, codes } = props.codesIndicators;\n\n  const filterCode = codes.filter((code) => code[\"id\"] === codeActive);\n  const filterCodes = codes.filter((code) => code[\"id\"] !== codeActive);\n  //console.log(\"filterCode 1\", filterCode[0][\"id\"], filterCode[0][\"code\"]);\n  //console.log(filterCodes);\n\n  const openIndicators = (e) => {\n    e.preventDefault();\n  };\n\n  const loadData = (e, index, id) => {\n    // console.log(\"===================\");\n    // console.log(\"indexPurchase\", index);\n    // console.log(\n    //   \"filterCode 2\",\n    //   \"id = \",\n    //   filterCode[0][\"id\"],\n    //   filterCode[0][\"code\"]\n    // );\n    // console.log(filterCodes);\n    // console.log(\"===================\");\n    e.preventDefault();\n    props.setPurchaseData([\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868539\",\n        procurementMethodDetail: \"Framework execution\",\n        classification: \"15000000-5\",\n        estematedValue: 71555247,\n        status: \"active\",\n      },\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868540\",\n        procurementMethodDetail: \"Restricted tender\",\n        classification: \"15000000-6\",\n        estematedValue: 1555247,\n        status: \"active\",\n      },\n      {\n        ocid: \"OCDS-B3WDP1-MD-1571837868539\",\n        procurementMethodDetail: \"Request for quotation\",\n        classification: \"15000000-7\",\n        estematedValue: 1555247,\n        status: \"evaluation\",\n      },\n    ]);\n\n    props.setCodeIndicators({\n      ...props.codesIndicators,\n      codeActive: id,\n    });\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <a\n        href=\"/\"\n        onClick={openIndicators}\n        className={styles.splitPurchases__link}\n      >\n        {filterCode[0][\"code\"]}\n      </a>\n      <ul>\n        {filterCodes.map((code, index) => {\n          return (\n            <li\n              key={code[\"id\"]}\n              onClick={(e) => {\n                loadData(e, index, code[\"id\"]);\n              }}\n            >\n              {code[\"code\"]}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default PurchaseSelect;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport PurchasesRow from \"./PurchasesRow\";\nimport PurchaseSelect from \"./PurchaseSelect\";\nimport styles from \"./Purchases.module.css\";\n\nconst Purchases = () => {\n  const [\n    purchaseData,\n    setPurchaseData,\n    statusVisible,\n    setStatusVisible,\n    codesIndicators,\n    setCodeIndicators,\n  ] = useContext(Context);\n\n  //console.log(codesIndicators);\n\n  // console.log(setPurchaseData);\n  const openIndicators = (e) => {\n    e.preventDefault();\n\n    setStatusVisible({\n      ...statusVisible,\n      indicators: true,\n      purchases: false,\n    });\n  };\n\n  return (\n    <div className={styles.splitPurchases}>\n      <h2 className={styles.splitPurchases__h2}>\n        <span>Splitting purchases to avoid procurement thresholds</span>\n        <PurchaseSelect\n          purchaseData={purchaseData}\n          setPurchaseData={setPurchaseData}\n          codesIndicators={codesIndicators}\n          setCodeIndicators={setCodeIndicators}\n        />\n      </h2>\n      <div className={styles.breadcrumbs}>\n        <div className={styles.breadcrumbs__link}>\n          <a href=\"/indicators\" onClick={openIndicators}>\n            Indicators\n          </a>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"7\"\n            height=\"12\"\n            viewBox=\"0 0 7 12\"\n            fill=\"none\"\n          >\n            <line\n              x1=\"0.646447\"\n              y1=\"11.6464\"\n              x2=\"5.64645\"\n              y2=\"6.64645\"\n              stroke=\"#9B3C86\"\n            />\n            <line\n              x1=\"0.353553\"\n              y1=\"0.646447\"\n              x2=\"6.35355\"\n              y2=\"6.64645\"\n              stroke=\"#9B3C86\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <td>OCID</td>\n            <td>Method</td>\n            <td>CPV Class</td>\n            <td>Expected value</td>\n            <td>Current status</td>\n          </tr>\n        </thead>\n        <tbody>\n          <PurchasesRow purchaseData={purchaseData} />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Purchases;\n","import React, { useRef } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"./BarChartVidget.module.css\";\n\nconst BarChartVidget = () => {\n  const ref2 = useRef();\n  const chartVidget = [\n    { month: \"AUG\", value01: \"58\", value02: \"82\" },\n    { month: \"SEP\", value01: \"48\", value02: \"58\" },\n    { month: \"OCT\", value01: \"94\", value02: \"48\" },\n    { month: \"NOV\", value01: \"10\", value02: \"28\" },\n    { month: \"DEC\", value01: \"60\", value02: \"48\" },\n  ];\n  // console.log(chartVidget);\n  // Get Parameters from chartData\n  const getParametrsArray = (params, param) => {\n    const array = [];\n    params.map((x) => {\n      return array.push(x[param]);\n    });\n    return array;\n  };\n  const labels = getParametrsArray(chartVidget, \"month\");\n  const dataBarPink = getParametrsArray(chartVidget, \"value01\");\n  const dataBarPurple = getParametrsArray(chartVidget, \"value02\");\n\n  const options = {\n    plugins: {\n      chartAreaCols: false,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n    scales: {\n      y: {\n        max: 100,\n        min: 0,\n        ticks: {\n          stepSize: 20,\n          beginAtZero: true,\n          drawTicks: false,\n          display: false,\n          padding: 0,\n        },\n        grid: {\n          borderColor: \"transparent\",\n          tickColor: false,\n          color: \"#e5e5e5\",\n        },\n      },\n      x: {\n        stacked: false,\n        grid: {\n          display: false,\n          borderColor: \"#e5e5e5\",\n        },\n      },\n    },\n  };\n  // Plugins for Chart\n  // console.log(Chart);\n  //Chart.register({ chartAreaCols2 });\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Value 01\",\n        data: dataBarPink,\n        backgroundColor: \"#db316f\",\n        borderColor: \"#db316f\",\n        pointBorderWidth: 0,\n        categoryPercentage: \"0.5\",\n        barPercentage: \"0.6\",\n        pointHoverBackgroundColor: \"#db316f\",\n      },\n      {\n        label: \"Value 02\",\n        data: dataBarPurple,\n        backgroundColor: \"#642ca7\",\n        borderColor: \"#642ca7\",\n        categoryPercentage: \"0.5\",\n        barPercentage: \"0.6\",\n        pointHoverBackgroundColor: \"#642ca7\",\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.chart}>\n      <Bar ref={ref2} data={data} options={options} />\n    </div>\n  );\n};\n\nexport default BarChartVidget;\n","import React, { useRef } from \"react\";\nimport { Bar, Chart } from \"react-chartjs-2\";\nimport styles from \"./BarChartMonitoring.module.css\";\n\nconst BarChartMonitoring = () => {\n  const ref2 = useRef();\n  const chartVidget = [\n    { month: \"Jan\", value01: \"98\", value02: \"53\" },\n    { month: \"Feb\", value01: \"98\", value02: \"53\" },\n    { month: \"Mar\", value01: \"98\", value02: \"53\" },\n    { month: \"Apr\", value01: \"98\", value02: \"53\" },\n    { month: \"Mar\", value01: \"98\", value02: \"53\" },\n    { month: \"Jun\", value01: \"98\", value02: \"53\" },\n    { month: \"Jul\", value01: \"98\", value02: \"53\" },\n    { month: \"Aug\", value01: \"98\", value02: \"53\" },\n    { month: \"Sep\", value01: \"98\", value02: \"53\" },\n    { month: \"Oct\", value01: \"98\", value02: \"53\" },\n    { month: \"Nov\", value01: \"98\", value02: \"53\" },\n    { month: \"Dec\", value01: \"98\", value02: \"53\" },\n  ];\n  // console.log(chartVidget);\n  // Get Parameters from chartData\n  const getParametrsArray = (params, param) => {\n    const array = [];\n    params.map((x) => {\n      return array.push(x[param]);\n    });\n    return array;\n  };\n  const labels = getParametrsArray(chartVidget, \"month\");\n  const dataBarBlue = getParametrsArray(chartVidget, \"value01\");\n  const dataBarPink = getParametrsArray(chartVidget, \"value02\");\n\n  /* html legend */\n  const getOrCreateLegendList = (chart, id) => {\n    //console.log(chart);\n    const legendContainer = document.getElementById(id);\n\n    let listContainer;\n\n    if (legendContainer) {\n      listContainer = legendContainer.querySelector(\"ul\");\n    }\n\n    if (!listContainer) {\n      listContainer = document.createElement(\"ul\");\n      listContainer.style.display = \"flex\";\n      listContainer.style.flexDirection = \"row\";\n      listContainer.style.margin = 0;\n      listContainer.style.padding = 0;\n\n      if (legendContainer) {\n        legendContainer.appendChild(listContainer);\n      }\n      //legendContainer.appendChild(listContainer);\n    }\n\n    return listContainer;\n  };\n\n  const htmlLegendPlugin2 = {\n    id: \"htmlLegend2\",\n    afterUpdate(chart, args, options) {\n      const ul = getOrCreateLegendList(chart, options.containerID);\n\n      // Remove old legend items\n      while (ul.firstChild) {\n        ul.firstChild.remove();\n      }\n\n      // Reuse the built-in legendItems generator\n      const items = chart.options.plugins.legend.labels.generateLabels(chart);\n\n      items.forEach((item) => {\n        const li = document.createElement(\"li\");\n        li.style.alignItems = \"center\";\n        li.style.cursor = \"pointer\";\n        li.style.display = \"flex\";\n        li.style.flexDirection = \"row\";\n        li.style.marginLeft = \"60px\";\n\n        li.onclick = () => {\n          const { type } = chart.config;\n          if (type === \"pie\" || type === \"doughnut\") {\n            // Pie and doughnut charts only have a single dataset and visibility is per item\n            chart.toggleDataVisibility(item.index);\n          } else {\n            chart.setDatasetVisibility(\n              item.datasetIndex,\n              !chart.isDatasetVisible(item.datasetIndex)\n            );\n          }\n          chart.update();\n        };\n\n        // Color box\n        const boxSpan = document.createElement(\"span\");\n        boxSpan.style.background = item.fillStyle;\n        boxSpan.style.borderColor = item.strokeStyle;\n        boxSpan.style.borderWidth = item.lineWidth + \"px\";\n        boxSpan.style.display = \"inline-block\";\n        boxSpan.style.height = \"18px\";\n        boxSpan.style.marginRight = \"10px\";\n        boxSpan.style.width = \"18px\";\n        boxSpan.style.borderRadius = \"50%\";\n\n        // Text\n        const textContainer = document.createElement(\"p\");\n        textContainer.style.color = \"white\";\n        textContainer.style.margin = 0;\n        textContainer.style.padding = 0;\n        textContainer.style.fontSize = \"14px\";\n        textContainer.style.fontWeight = \"300\";\n        textContainer.style.textDecoration = item.hidden ? \"line-through\" : \"\";\n\n        const text = document.createTextNode(item.text);\n        textContainer.appendChild(text);\n\n        li.appendChild(boxSpan);\n        li.appendChild(textContainer);\n        ul.appendChild(li);\n      });\n    },\n  };\n\n  Chart.register({ htmlLegendPlugin2 });\n\n  const options = {\n    plugins: {\n      chartAreaCols: false,\n      htmlLegend: false,\n      htmlLegend2: {\n        containerID: \"legend-container2\",\n      },\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n    scales: {\n      y: {\n        max: 105,\n        min: 0,\n        ticks: {\n          stepSize: 15,\n          beginAtZero: true,\n          drawTicks: false,\n          display: false,\n          padding: 0,\n        },\n        grid: {\n          borderColor: \"transparent\",\n          tickColor: false,\n          color: \"RGBA(231, 235, 239, 0.25)\",\n        },\n      },\n      x: {\n        stacked: false,\n        ticks: {\n          color: \"#E7EBEF\",\n        },\n        grid: {\n          display: false,\n          borderColor: \"RGBA(231, 235, 239, 0.25)\",\n          color: \"red\",\n        },\n      },\n    },\n  };\n  // Plugins for Chart\n  // console.log(Chart);\n  //Chart.register({ chartAreaCols2 });\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Total procedures\",\n        data: dataBarBlue,\n        backgroundColor: \"#37B5EB\",\n        borderColor: \"#37B5EB\",\n        pointBorderWidth: 0,\n        categoryPercentage: \"0.6\",\n        barPercentage: \"0.7\",\n        pointHoverBackgroundColor: \"RGBA(55, 181, 235, 1)\",\n      },\n      {\n        label: \"Risky procedures\",\n        data: dataBarPink,\n        backgroundColor: \"#E08BD0\",\n        borderColor: \"#E08BD0\",\n        categoryPercentage: \"0.6\",\n        barPercentage: \"0.7\",\n        pointHoverBackgroundColor: \"#E08BD0\",\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <div className={styles.chart}>\n        <div className={styles.chart__top}>\n          <h2 className={styles.chart__h2}>\n            Average allocation of the red-flags\n          </h2>\n          <div id=\"legend-container2\"></div>\n        </div>\n        <Bar ref={ref2} data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default BarChartMonitoring;\n","import React, { useState } from \"react\";\nimport { Context } from \"./context/Context\";\nimport { CSSTransition } from \"react-transition-group\";\nimport BarChart from \"./components/BarChart/BarChart\";\nimport Indicators from \"./components/Indicators/Indicators\";\nimport Purchases from \"./components/Purchases/Purchases\";\nimport BarChartVidget from \"./components/BarChartVidget/BarChartVidget\";\nimport BarChartMonitoring from \"./components/BarChartMonitoring/BarChartMonitoring\";\nimport \"./styles/App.css\";\n\nconst App = () => {\n  const nodeRefChart = React.useRef();\n  const nodeRefIndicators = React.useRef();\n  const nodeRefPurhcases = React.useRef();\n\n  const nodeRef2 = React.useRef();\n  const nodeRef3 = React.useRef();\n\n  const [statusVisible, setStatusVisible] = useState({\n    chart: true,\n    indicators: false,\n    purchases: false,\n  });\n\n  const chartData = [\n    { stage: \"Announcement\", value: 3, average: 2 },\n    { stage: \"Clarification\", value: 3, average: 4 },\n    { stage: \"Qualification\", value: 3, average: 5 },\n    { stage: \"Tendering\", value: 3, average: 7 },\n    { stage: \"Evaluation\", value: 3, average: 2 },\n    { stage: \"Awarding\", value: 3, average: 5 },\n    { stage: \"Contracting\", value: 3, average: 6 },\n  ];\n\n  const [indicatorsData, setIndicatorsData] = useState(null);\n\n  const [purchaseData, setPurchaseData] = useState(null);\n\n  const [labelsIndicators, setLabelIndicators] = useState({\n    labels: [{ id: \"\", label: \"\" }],\n    labelActive: \"\",\n  });\n  const [codesIndicators, setCodeIndicators] = useState({\n    codes: [{ id: \"\", code: \"\" }],\n    codeActive: \"\",\n  });\n\n  //const [labelActive, setLabelActive] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <CSSTransition\n        in={statusVisible.chart}\n        timeout={1000}\n        classNames=\"app__block\"\n        nodeRef={nodeRefChart}\n        unmountOnExit\n      >\n        <Context.Provider\n          value={[\n            setIndicatorsData,\n            statusVisible,\n            setStatusVisible,\n            labelsIndicators,\n            setLabelIndicators,\n          ]}\n        >\n          <div ref={nodeRefChart}>\n            {statusVisible.chart && <BarChart chartdata={chartData} />}\n          </div>\n        </Context.Provider>\n      </CSSTransition>\n\n      <CSSTransition\n        in={statusVisible.indicators}\n        timeout={1000}\n        classNames=\"app__block\"\n        nodeRef={nodeRefIndicators}\n        unmountOnExit\n      >\n        <Context.Provider\n          value={[\n            indicatorsData,\n            setIndicatorsData,\n            purchaseData,\n            setPurchaseData,\n            statusVisible,\n            setStatusVisible,\n            labelsIndicators,\n            setLabelIndicators,\n            codesIndicators,\n            setCodeIndicators,\n          ]}\n        >\n          <div ref={nodeRefIndicators}>\n            {statusVisible.indicators && <Indicators />}\n          </div>\n        </Context.Provider>\n      </CSSTransition>\n\n      <CSSTransition\n        in={statusVisible.purchases}\n        timeout={1000}\n        classNames=\"app__block\"\n        nodeRef={nodeRefPurhcases}\n        unmountOnExit\n      >\n        <Context.Provider\n          value={[\n            purchaseData,\n            setPurchaseData,\n            statusVisible,\n            setStatusVisible,\n            codesIndicators,\n            setCodeIndicators,\n          ]}\n        >\n          <div ref={nodeRefPurhcases}>\n            {statusVisible.purchases && <Purchases />}\n          </div>\n        </Context.Provider>\n      </CSSTransition>\n\n      <CSSTransition\n        in={statusVisible.chart}\n        timeout={1000}\n        classNames=\"app__block\"\n        nodeRef={nodeRef2}\n        unmountOnExit\n      >\n        <Context.Provider\n          value={[\n            setIndicatorsData,\n            statusVisible,\n            setStatusVisible,\n            labelsIndicators,\n            setLabelIndicators,\n          ]}\n        >\n          <div ref={nodeRef2}>{statusVisible.chart && <BarChartVidget />}</div>\n        </Context.Provider>\n      </CSSTransition>\n\n      <CSSTransition\n        in={statusVisible.chart}\n        timeout={1000}\n        classNames=\"app__block\"\n        nodeRef={nodeRef3}\n        unmountOnExit\n      >\n        <Context.Provider\n          value={[\n            setIndicatorsData,\n            statusVisible,\n            setStatusVisible,\n            labelsIndicators,\n            setLabelIndicators,\n          ]}\n        >\n          <div ref={nodeRef3}>\n            {statusVisible.chart && <BarChartMonitoring />}\n          </div>\n        </Context.Provider>\n      </CSSTransition>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"BarChartMonitoring_wrap__2SgQ8\",\"chart\":\"BarChartMonitoring_chart__2WO10\",\"chart__h2\":\"BarChartMonitoring_chart__h2__2eSMj\",\"chart__top\":\"BarChartMonitoring_chart__top__2vSxv\",\"legend-container2\":\"BarChartMonitoring_legend-container2__3V6hF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"BarChart_chart__NgD6N\",\"chart__h2\":\"BarChart_chart__h2__1L0nG\",\"chart__top\":\"BarChart_chart__top__P0maK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"BarChartVidget_chart__1Y3t4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicators\":\"Indicators_indicators__YP13z\",\"indicators__h2\":\"Indicators_indicators__h2__tN_OW\",\"indicators__link\":\"Indicators_indicators__link__248Le\",\"table\":\"Indicators_table__RYk5m\",\"breadcrumbs\":\"Indicators_breadcrumbs__1j-hq\",\"breadcrumbs__link\":\"Indicators_breadcrumbs__link__3UpX_\"};"],"sourceRoot":""}